# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: uiaas-api-stats # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
frameworkVersion: ">=1.28.0 <2.0.0"

provider:
  name: aws
  runtime: go1.x
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "*" #todo- refactor to least priveledge
      Resource: "*"
    - Effect: Allow
      Action:
        - glue:*
      Resource: "*"
    - Effect: Allow
      Action:
        - s3:GetBucketLocation
        - s3:GetObject
        - s3:ListBucket
        - s3:ListBucketMultipartUploads
        - s3:ListMultipartUploadParts
        - s3:AbortMultipartUpload
        - s3:CreateBucket
        - s3:PutObject
      Resource: "arn:aws:s3:::aws-glue-scripts-417615409974-us-east-1"
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem 
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

package:
 exclude:
   - ./**
 include:
   - ./bin/**

functions:       
  getstats:
    handler: bin/statisticshandler
    events:
      - http:
          path: statistics
          method: get
          request:
            template: '{ "bucketname" : "$input.params(''bucketname'')" }'
  postmetadata:
    handler: bin/postmetadatahandler
    events:
      - http:
          path: sites/{sid}/statistics/metadata
          method: post
  getmetadata:
    handler: bin/getmetadatahandler
    events:
      - http:
          path: sites/{sid}/statistics/metadata
          method: get

  # getstats:
  #   handler: bin/statisticshandler
  #   events:
  #     - sqs:
  #         arn:
  #           Fn::GetAtt:
  #             - StatisticsQueue
  #             - Arn

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
# events:
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
# resources:
#   Resources:
#     StatisticsQueue:
#       Type: AWS::SQS::Queue
#       Properties: 
#         QueueName: statisticsqueue-${opt:stage}
#     ## Need an athena bucket for query results 

#  Outputs:
#     StatisticsQueueOutput:
#       Description: "SQS queue name"
#       Value: !Ref StatisticsQueue
#       Name: !Sub SQSQueue${StatisticsQueue}
resources:
  Resources:
    SitesTable:
      Type: 'AWS::DynamoDB::Table'
      # DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "siteID"
            AttributeType: "S"
        KeySchema:
          -
            AttributeName: "siteID"
            KeyType: "HASH"
        ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}